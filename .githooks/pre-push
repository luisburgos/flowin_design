#!/usr/bin/env bash
# .git/hooks/pre-push
set -euo pipefail

LINE_LEN=80
COVERAGE_THRESHOLD=0

# Pretty error if anything fails
trap 'echo "‚ùå Pre-push checks failed (line $LINENO)"; exit 1' ERR

has_cmd() { command -v "$1" >/dev/null 2>&1; }

format_if_present() {
  local dir="$1"
  local -a paths=()
  [[ -d "$dir/lib"  ]] && paths+=("$dir/lib")
  [[ -d "$dir/test" ]] && paths+=("$dir/test")
  if ((${#paths[@]})); then
    fvm dart format --line-length "$LINE_LEN" --set-exit-if-changed "${paths[@]}"
  else
    echo "‚ÑπÔ∏è  No lib/ or test/ in $dir; skipping format."
  fi
}

run_flutter_checks() {
  local dir="$1"        # "." or "example"
  local with_coverage="${2:-false}"

  echo "‚îÅ‚îÅ‚îÅ üîé Running checks in: $dir ‚îÅ‚îÅ‚îÅ"
  (
    cd "$dir"
    echo "‚Ä¢ flutter pub get"
    fvm flutter pub get

    echo "‚Ä¢ flutter analyze"
    fvm flutter analyze

    echo "‚Ä¢ flutter test${with_coverage:+ (with coverage)}"
    if [[ "$with_coverage" == "true" ]]; then
      fvm flutter test --coverage
    else
      fvm flutter test
    fi
  )

  echo "‚Ä¢ dart format (lib/, test/)"
  format_if_present "$dir"

  # Optional coverage gate (root only by default)
  if [[ "$with_coverage" == "true" ]]; then
    if ! has_cmd lcov; then
      echo "‚ö†Ô∏è  lcov not found; skipping coverage threshold check."
    else
      if [[ -f "$dir/coverage/lcov.info" ]]; then
        local pct
        pct=$(lcov --summary "$dir/coverage/lcov.info" | grep -oE 'lines\.*: [0-9.]+%' | grep -oE '[0-9.]+' | cut -d. -f1 || echo 0)
        if (( pct < COVERAGE_THRESHOLD )); then
          echo "‚ùå Coverage ${pct}% is below threshold of ${COVERAGE_THRESHOLD}%"
          exit 1
        fi
        echo "‚úÖ  Coverage check passed (${pct}% ‚â• ${COVERAGE_THRESHOLD}%)"
      else
        echo "‚ö†Ô∏è  No lcov.info at $dir/coverage/lcov.info; skipping coverage threshold check."
      fi
    fi
  fi

  echo "‚úÖ  Checks passed in: $dir"
}

echo "Running pre-push checks..."

# 1) Root package (with coverage + spellcheck)
run_flutter_checks "." true

echo "‚Ä¢ spell check (root)"
if ! has_cmd cspell; then
  echo "‚ö†Ô∏è  cspell not found. Install with: npm install -g cspell"
  exit 1
fi
# Respect .gitignore and avoid noisy folders if you have them
cspell --config .github/cspell.json \
  --no-progress \
  --gitignore \
  "**/*.{dart,md,yaml}" || {
    echo "‚ùå Spelling issues found"
    exit 1
  }
echo "‚úÖ  Spell check passed"

# 2) Example package (if present)
if [[ -d "example" ]]; then
  run_flutter_checks "example" false
else
  echo "‚ÑπÔ∏è  No example/ directory found; skipping example checks."
fi

echo "‚úÖ  All pre-push checks passed. Proceeding with push."
exit 0
